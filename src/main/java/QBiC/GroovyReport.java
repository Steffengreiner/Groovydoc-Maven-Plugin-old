package QBiC;

import java.util.Locale;
import org.apache.maven.plugins.annotations.Mojo;
import org.apache.maven.plugins.annotations.LifecyclePhase;
import org.apache.maven.plugins.annotations.ResolutionScope;
import org.apache.maven.project.MavenProject;
import org.apache.maven.reporting.AbstractMavenReport;
import org.apache.maven.reporting.MavenReportException;

/**
 * Adapts the report summary documentation in the projects-reports.html file
 * generated by the mvn site plugin to include the Groovydocs generated by GMavenPlus
 *
 */
@Mojo(
    name = "Groovydoc-Maven-Report",
    defaultPhase = LifecyclePhase.SITE,
    requiresDependencyResolution = ResolutionScope.RUNTIME,
    requiresProject = true,
    threadSafe = true
)
public class GroovyReport extends AbstractMavenReport {

    /**
     * Specifies the Name, Link and Description on the project-reports.html page
     */

    /**
     * Generate Link to GmavenPlus based groovy Documentation
     * @return String containing link to groovydoc index.html
     */
    public String getOutputName() {

        return "gapidocs/index";
    }

    /**
     * Specify name of GmavenPlus based groovydoc documentation
     * @return String specifing name of Groovydoc generated documentation
     */
    public String getName(Locale locale) {

        return "Groovydocs";
    }
    /**
     * Specify description of GmavenPlus based groovydoc documentation
     * @return String specifing description of Groovydoc generated documentation
     */

    public String getDescription(Locale locale) {

        return "Groovydoc API documentation.";
    }

    /**
     * Has to be implemented because of AbstractMavenReport Interface.
     * Since we already generate the Groovydocumentation with the Gmaven+Plugin
     * this method can be kept empty
     */
    @Override
    protected void executeReport(Locale locale) throws MavenReportException {

    }

}